version: '3.0'
services:

  maestro1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: maestro1
    ports:
      - 8080:9200
    volumes:
      - /home/ubuntu/environment/datos/nodo1:/usr/share/elasticsearch/data
    environment:
      - node.name=maestro1
      - cluster.name=MiCluster
      - discovery.seed_hosts=maestro2
      - cluster.initial_master_nodes=maestro1,maestro2
      - "ES_JAVA_OPTS=-Xms220m -Xmx220m"
#     - bootstrap.memory_lock=true  # Desactivar el swapping para la memoria de elastic
      - node.master=true
      - node.voting_only=false
      - node.data=false
      - node.ingest=false 
      - node.remote_cluster_client=false  # cluster.remote.connect: false

  maestro2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: maestro2
    volumes:
      - /home/ubuntu/environment/datos/nodo2:/usr/share/elasticsearch/data
    environment:
      - node.name=maestro2
      - cluster.name=MiCluster
      - discovery.seed_hosts=maestro1
      - cluster.initial_master_nodes=maestro1,maestro2
      - "ES_JAVA_OPTS=-Xms220m -Xmx220m"
#     - bootstrap.memory_lock=true  # Desactivar el swapping para la memoria de elastic
      - node.master=true
      - node.voting_only=false
      - node.data=false
      - node.ingest=false 
      - node.remote_cluster_client=false  # cluster.remote.connect: false

  data1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: data1
    volumes:
      - /home/ubuntu/environment/datos/nodo3:/usr/share/elasticsearch/data
    environment:
      - node.name=data1
      - cluster.name=MiCluster
      - discovery.seed_hosts=maestro1,maestro2
      - cluster.initial_master_nodes=maestro1,maestro2
      - "ES_JAVA_OPTS=-Xms220m -Xmx220m"
#     - bootstrap.memory_lock=true  # Desactivar el swapping para la memoria de elastic
      - node.master=true
      - node.voting_only=true
      - node.data=true
      - node.ingest=false 
      - node.remote_cluster_client=false  # cluster.remote.connect: false

  cerebro:
    image: lmenezes/cerebro:0.8.5
    container_name: cerebro
    ports:
      - 8081:9000
    volumes:
      - ./application.conf:/opt/cerebro/conf/application.conf

  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kibana
    ports:
      - 8082:5601
    environment:
      ELASTICSEARCH_HOSTS: "http://nodo1:9200"
      SERVER_NAME: "kibana"
      SERVER_HOST: "kibana"

